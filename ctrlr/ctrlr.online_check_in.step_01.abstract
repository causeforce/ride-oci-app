<?php
/************************************************************************
 * @author	Kingsley U. Uwode II, contractor via Robert Half Technologies
 * @since	May 29 2015
 * @link	mailto:kingzmeadow@hotmail.com
 *
 * step_01:
 * Welcome Screen (abstract file, not to be used by itself)
 *
 * The greeting showed to the end-user and the beginning of the
 * online check-in process
 */

/**
 * ctrlr_online_check_in_action_step_01()	handles step_01 within the online check-in process
 *
 * @param	ARRAY	&$env	reference to global variable '$_app_env'
 * @param	ARRAY	&$msgs	reference to variable '$main_msgs' where any messages are stored
 * @param	ARRAY	&$out	reference to variable '$output' which contains content to be rendered
 * @param	BOOLEAN	&$CRUD	specifies if the action is being called in a CReate/Update/Delete compacity
 * @return	VOID	N/A
 */
function ctrlr_online_check_in_action_step_01(&$env,&$msgs,&$out,$CRUD=FALSE){
    if($CRUD===TRUE){
        if($env['flags']['is_CRUD']===TRUE){
            # CReate / Update / Delete code lines
            //If the check-in status is 'unknown' or 'initial', then set to 'started'
            if(($cs=ctrlr_online_check_in_pro_get_registration_field($env,$msgs,'checkinStatus'))!==''){
                if($cs===(string)$env['model']->check_in->status[5] || $cs===(string)$env['model']->check_in->status[0]){
                    $env['data']['oci']['check_in_status']=1;
                }
            }
        }
    }
    else if($view=_ctrlr_pro_view(__FUNCTION__)){
        # Read code lines
        $step_01['is_view_data_retrieved']=&$env['flags']['is_view_data_retrieved'];

        //Logic to retrieve view specific data from an API or Database, which when checked, would detemine if view specific data was retrieved
        $step_01['is_view_data_retrieved']=true;

        if($step_01['is_view_data_retrieved']===TRUE || $env['flags']['is_step_view_on_error']===TRUE){
            //Hide the PREVIOUS button for this step
            $env['flags']['is_hiding_nav']['previous']=true;

            # Replace text placeholders with entries from the step view
            $view['mark_up']=str_replace(
                array(
                    '-TXT-HEADER-',
                    '-TXT-AUTOMATED-',
                    '-TXT-ITEM-1-',
                    '-TXT-ITEM-2-',
                    '-TXT-ITEM-3-',
                    '-TXT-ITEM-4-',
                    '-TXT-ITEM-5-',
                    '-TXT-ITEM-6-',
                    '-TXT-ITEM-7-',
                    '-TXT-ITEM-8-',
                    '-TXT-ITEM-9-',
                    '-TXT-ITEM-0-',
                    '-DROPDOWN-LANGUGES-'
                ),
                array(
                    lng($view['sxml']->text[$t=0]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    $env['lang_select']
                ),
                $view['mark_up']
            );

            //Update output to be rendered
            $out['RPL']['page_title'].=lng($view['sxml']->page_title);
            $out['RPL']['cascading_style_sheet'][]=$view['files']['css'];
            $out['RPL']['javascript'][]=$view['files']['js'];
            $out['RPL']['view']=str_replace((nl().'_STEP_VIEW_'),$view['mark_up'],$out['RPL']['view']);
        }
    }
}
?>
